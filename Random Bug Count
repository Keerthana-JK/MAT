// Random Bugs Count with Corresponding Values in Column A
public static (int Count, List<string> CorrespondingValues) BugsCountWithCorrespondingValues(string filepath, int sheetIndex, string targetColumnName, string matchValue, string correspondingColumnName)
{
    try
    {
        using (var workbook = new XLWorkbook(filepath))
        {
            // Data is in the specified sheet
            var worksheet = workbook.Worksheet(sheetIndex);

            // Get all used cells in the target column (e.g., "AC")
            var targetCells = worksheet.Column(targetColumnName).CellsUsed();

            // Initialize a list to store corresponding values from column "A"
            var correspondingValues = new List<string>();

            // Filter rows where the target column matches the specified value
            var matchingRows = targetCells.Skip(1).Where(cell =>
                cell.GetValue<string>().Equals(matchValue, StringComparison.OrdinalIgnoreCase));

            // Extract values from column "A" for the matching rows
            foreach (var cell in matchingRows)
            {
                var rowNumber = cell.Address.RowNumber;
                var correspondingValue = worksheet.Cell(rowNumber, correspondingColumnName).GetValue<string>();
                correspondingValues.Add(correspondingValue);
            }

            // Return the count and corresponding values
            return (correspondingValues.Count, correspondingValues);
        }
    }
    catch (Exception ex)
    {
        throw new Exception($"Error in BugsCountWithCorrespondingValues: {ex.Message}", ex);
    }
}
