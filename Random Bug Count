public static (int Count, List<string> TestCaseIds, List<string> CorrespondingBugId) FailedTcIdAndCount(
    string filepath, string testCaseIdColumn, string excludeValue, string targetColumn, int sheetIndex = 0)
{
    try
    {
        var data = ReadFile(filepath, sheetIndex);

        var failedTCIds = new List<string>();
        var correspondingBugIds = new List<string>();

        foreach (var row in data)
        {
            if (row.TryGetValue(testCaseIdColumn, out var testCaseId) &&
                !testCaseId.Equals(excludeValue, StringComparison.OrdinalIgnoreCase))
            {
                failedTCIds.Add(testCaseId);

                if (row.TryGetValue(targetColumn, out var correspondingValue))
                {
                    correspondingBugIds.Add(correspondingValue);
                }
            }
        }

        return (failedTCIds.Count, failedTCIds, correspondingBugIds);
    }
    catch (Exception ex)
    {
        throw new Exception($"Error in FailedTcIdAndCount: {ex.Message}", ex);
    }
}
