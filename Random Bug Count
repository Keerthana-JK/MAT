// Count failed test cases and get their IDs
public static (int FailedCount, List<string> FailedTestCaseIds) FailedTCCountAndIds(string filepath, int sheetIndex, string testCaseIdColumn, string resultColumn, string expectedResult)
{
    try
    {
        using (var workbook = new XLWorkbook(filepath))
        {
            var worksheet = workbook.Worksheet(sheetIndex);

            // Get the cells of the test case ID and result columns
            var testCaseIdCells = worksheet.Column(testCaseIdColumn).CellsUsed().Skip(1); // Skip the header
            var resultCells = worksheet.Column(resultColumn).CellsUsed().Skip(1);         // Skip the header

            // Combine the cells into pairs (TestCaseID, Result)
            var testCaseResults = testCaseIdCells.Zip(resultCells, (idCell, resultCell) => new
            {
                TestCaseId = idCell.GetValue<string>(),
                Result = resultCell.GetValue<string>()
            });

            // Filter the failed test cases (where result != expectedResult)
            var failedTestCases = testCaseResults
                .Where(tc => !tc.Result.Equals(expectedResult, StringComparison.OrdinalIgnoreCase))
                .ToList();

            // Get the count and the IDs of the failed test cases
            int failedCount = failedTestCases.Count;
            var failedIds = failedTestCases.Select(tc => tc.TestCaseId).ToList();

            return (failedCount, failedIds);
        }
    }
    catch (Exception ex)
    {
        throw new Exception($"Error in FailedTCCountAndIds: {ex.Message}", ex);
    }
}
