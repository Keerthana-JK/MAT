MedicationScheduleWindow
------------------------
<Window x:Class="MATProject.Pages.MedicationScheduleWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MATProject.Pages" xmlns:viewmodels="clr-namespace:MATProject.ViewModels" d:DataContext="{d:DesignInstance Type=viewmodels:MedicationScheduleViewModel}"
		mc:Ignorable="d"
        Title="MedicationScheduleWindow" Height="450" Width="800">
	<Grid>
		<DataGrid x:Name="grdMedications" IsReadOnly="True" AreRowDetailsFrozen="True" AutoGenerateColumns="False" SelectionMode="Single" ItemsSource="{Binding MedicationSchedules}" Margin="36,30,35,43">
			<DataGrid.Columns>
				<DataGridTextColumn Header="Medicine" Binding="{Binding MedicationName}" Width="200"></DataGridTextColumn>
				<DataGridTextColumn Header="Dose Time" Binding="{Binding ScheduledTime}" Width="200"></DataGridTextColumn>
				<DataGridTextColumn Header="Status" Binding="{Binding Status}" Width="200"></DataGridTextColumn>
			</DataGrid.Columns>
		</DataGrid>
	</Grid>
</Window>


MedicationSchedule.cs
----------------------

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MATProject.Entities
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    public partial class MedicationSchedule
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public MedicationSchedule()
        {
            this.CheckIns = new HashSet<CheckIn>();
            this.Reminders = new HashSet<Reminder>();
        }
        [Key]
        public int ScheduleID { get; set; }
        public Nullable<int> MedicationID { get; set; }
        public System.DateTime ScheduledTime { get; set; }
        public string Status { get; set; }
        public Nullable<System.DateTime> CreatedAt { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CheckIn> CheckIns { get; set; }
        public virtual Medication Medication { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Reminder> Reminders { get; set; }
    }
}



MedicationScheduleViewModel
---------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MATProject.Orm;
using MATProject.Repo;
using MATProject.Entities;
using System.Windows.Input;
using MATProject.Commands;
using System.Collections.ObjectModel;
namespace MATProject.ViewModels
{
	public class MedicationScheduleViewModel:INotifyPropertyChanged
    {
		private int _scheduleId;
		private int _medicationId;
		private string _medicationName;
		private DateTime _scheduledTime;
		private string _status;
		private DateTime _createdAt;
		private MedicationSchedulesRepo medicationSchedulesRepo;

		public int ScheduleId
		{
			get => _scheduleId;
			set { _scheduleId = value; OnPropertyChanged(nameof(ScheduleId)); }
		}
		public int MedicationId
		{
			get => _medicationId;
			set { _medicationId = value; OnPropertyChanged(nameof(MedicationId)); }
		}

		private ObservableCollection<MedicationSchedule> _medicationSchedule;
		public ObservableCollection<MedicationSchedule> MedicationSchedules
		{
			get
			{
				return _medicationSchedule;
			}
			set
			{
				_medicationSchedule = value;
				OnPropertyChanged(nameof(MedicationSchedules));
			}
		}
		public string MedicationName
		{
			get => _medicationName;
			set { _medicationName = value; OnPropertyChanged(nameof(MedicationName)); }
		}
		public DateTime ScheduledTime
		{
			get => _scheduledTime;
			set
			{
				_scheduledTime = value; OnPropertyChanged(nameof(ScheduledTime));
			}
		}
		public string Status
		{
			get => _status;
			set
			{
				_status = value; OnPropertyChanged(nameof(Status));
			}
		}

		public event PropertyChangedEventHandler PropertyChanged;
        private void OnPropertyChanged(string propertyName)
        {
            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }

		public MedicationScheduleViewModel()
        {
			medicationSchedulesRepo = new MedicationSchedulesRepo();
			MarkAsTakenCommand = new RelayCommand(MarkAsTaken);
			MarkAsMissedCommand = new RelayCommand(MarkAsMissed);
			LoadMedications();

        }
        public void LoadMedications()
        {
			MedicationSchedules = medicationSchedulesRepo.ReadAll();
		}

		public ICommand MarkAsTakenCommand { get; set; }
		public ICommand MarkAsMissedCommand { get; set; }

		private void MarkAsTaken()
		{
			Status = "Taken";
		}
		private void MarkAsMissed()
		{
			Status = "Missed";
		}

	}
}
